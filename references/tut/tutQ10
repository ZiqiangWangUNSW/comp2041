<!DOCTYPE html>
<html lang="en">
<head>
<title>

COMP2041 Week 10 Tutorial Questions

</title>
<link href="/~cs2041/flask.cgi/static/bootstrap.min.css?121200" rel="stylesheet"/>
<link href="/~cs2041/flask.cgi/static/course.css?6554" rel="stylesheet"/>
<script src="/~cs2041/flask.cgi/static/jquery.min.js?95992" type="text/javascript"></script>
<script src="/~cs2041/flask.cgi/static/bootstrap.min.js?37045" type="text/javascript"></script>
<script src="/~cs2041/flask.cgi/static/course.js?1631" type="text/javascript"></script>
<link href="https://cgi.cse.unsw.edu.au/~cs2041/" rel="canonical"/>
</head>
<body>
<div class="container">
<div id="heading">
<a class="heading_link" href="http://www.cse.unsw.edu.au/~cs2041/17s2/" id="left_heading_link" target="_blank">COMP[29]041 17s2</a>
<span class="dropdown">
<button class="btn dropdown-toggle heading_button" data-toggle="dropdown" type="button">
        Week 10
        <span class="caret"></span>
</button>
<ul class="dropdown-menu">
<li><a href="https://cgi.cse.unsw.edu.au/~cs2041/tut/02/questions">Week 02</a></li>
<li><a href="https://cgi.cse.unsw.edu.au/~cs2041/tut/03/questions">Week 03</a></li>
<li><a href="https://cgi.cse.unsw.edu.au/~cs2041/tut/04/questions">Week 04</a></li>
<li><a href="https://cgi.cse.unsw.edu.au/~cs2041/tut/05/questions">Week 05</a></li>
<li><a href="https://cgi.cse.unsw.edu.au/~cs2041/tut/06/questions">Week 06</a></li>
<li><a href="https://cgi.cse.unsw.edu.au/~cs2041/tut/07/questions">Week 07</a></li>
<li><a href="https://cgi.cse.unsw.edu.au/~cs2041/tut/08/questions">Week 08</a></li>
<li><a href="https://cgi.cse.unsw.edu.au/~cs2041/tut/09/questions">Week 09</a></li>
<li><a href="https://cgi.cse.unsw.edu.au/~cs2041/tut/10/questions">Week 10</a></li>
<li><a href="https://cgi.cse.unsw.edu.au/~cs2041/tut/11/questions">Week 11</a></li>
<li><a href="https://cgi.cse.unsw.edu.au/~cs2041/tut/12/questions">Week 12</a></li>
<li><a href="https://cgi.cse.unsw.edu.au/~cs2041/tut/13/questions">Week 13</a></li>
</ul>
</span>
<span class="dropdown">
<button class="btn dropdown-toggle heading_button" data-toggle="dropdown" type="button">
        Tutorial
        <span class="caret"></span>
</button>
<ul class="dropdown-menu">
<li><a href="https://cgi.cse.unsw.edu.au/~cs2041/tut/10/questions">Tutorial
                
            </a></li>
<li><a href="https://cgi.cse.unsw.edu.au/~cs2041/lab/10/questions">Laboratory
                
            </a></li>
<li><a href="https://cgi.cse.unsw.edu.au/~cs2041/test/10/questions">Weekly Test
                
            </a></li>
</ul>
</span>
<span class="dropdown">
<button class="btn dropdown-toggle heading_button" data-toggle="dropdown" type="button">
        Questions
        <span class="caret"></span>
</button>
<ul class="dropdown-menu">
<li><a href="https://cgi.cse.unsw.edu.au/~cs2041/tut/10/questions">Questions
            
            </a></li>
<li><a href="https://cgi.cse.unsw.edu.au/~cs2041/tut/10/answers">Sample Answers
            
            </a></li>
</ul>
</span>
<a class="heading_link" href="http://www.cse.unsw.edu.au/~cs2041/17s2/" id="right_heading_link" target="_blank">Software Construction</a>
</div>
</div>
<div class="tutlab tut">
<ol>
<li>
<p>
Write a Perl program which reads from STDIN
a username then a password (not both simultaneously).
</p><p>
It should then check the password matches one stored for user <i>username</i> in
the file <code>users/</code><i>username</i><code>.password</code>.
</p><p>
It should print a message indicating the user is unknown  if this file does not exist
otherwise print an appropiate message indicating whether the password matches.
</p><p>
For example:

</p><pre class="command_line">
<kbd class="shell">mkdir users</kbd>
<kbd class="shell">echo 'correct horse battery staple' &gt;users/andrewt.password</kbd>
<kbd class="shell">login.pl</kbd>
username: <kbd>jas</kbd>
password: <kbd>beer</kbd>
Unkown username!
<kbd class="shell">login.pl</kbd>
username: <kbd>andrewt</kbd>
password: <kbd>42</kbd>
Incorrect password!
<kbd class="shell">login.pl</kbd>
username: <kbd>andrewt</kbd>
password: <kbd>correct horse battery staple</kbd>
You are authenticated.
</pre>
<p></p>
</li><li>

How are CGI scripts run?

<p></p>
</li><li>

Write a shell CGI script which prints details of the context in which it is run.
Here is an example implementation:

<p>
</p><hr/>
<div class="cgi_display">
<div class="cgi_display_title">
<a href="show_execution_context.sh.cgi" target="_blank">show_execution_context.sh.cgi</a>
</div>
<div class="cgi_output_panel">
<iframe class="cgi_output_display" onload="show_html_source(this)" src="show_execution_context.sh.cgi">
</iframe>
</div>
<div class="html_source_panel">
<div class="html_source_display">
</div>
</div>
</div>
<hr/>
<p>

Discuss how security concerns might have affected CSE's choices
for configuring how student CGI scripts are run on its web server.

</p><p></p>
</li><li>

Web servers pass some useful information to CGI scripts as environment variables.
<p>
Write a shell CGI script which prints details of the environment variables it has been passed.
Here is an example implementation:

</p><p>
</p><hr/>
<div class="cgi_display">
<div class="cgi_display_title">
<a href="show_environment_variables.sh.cgi" target="_blank">show_environment_variables.sh.cgi</a>
</div>
<div class="cgi_output_panel">
<iframe class="cgi_output_display" onload="show_html_source(this)" src="show_environment_variables.sh.cgi">
</iframe>
</div>
<div class="html_source_panel">
<div class="html_source_display">
</div>
</div>
</div>
<hr/>
<p>

Discuss what some of these environment variables might indicate.

</p><p></p>
</li><li>

A HTTP request can pass parameters to a web server.  The web server passes
these on to the CGI script typically in environment variable(s) for GET requests
and on STDIN for POST requests.
<p>
Write a shell CGI script which prints whether it was invoked with a GET request
or a POST request and prints details of the parameters it has been passed.
Here is an example implementation:

</p><p>
</p><hr/>
<div class="cgi_display">
<div class="cgi_display_title">
<a href="show_input_parameters.sh.cgi?comp2041=best-course-ever" target="_blank">show_input_parameters.sh.cgi?comp2041=best-course-ever</a>
</div>
<div class="cgi_output_panel">
<iframe class="cgi_output_display" onload="show_html_source(this)" src="show_input_parameters.sh.cgi?comp2041=best-course-ever">
</iframe>
</div>
<div class="html_source_panel">
<div class="html_source_display">
</div>
</div>
</div>
<hr/>
<p>
</p><p></p>
<h3>Revision questions</h3>

The remaining tutorial questions are primarily intended for revision - either this week
or later in session.
<p>
Your tutor may still choose to cover some of the questions time permitting.
</p><p>
</p></li><li>

A HTTP request can pass pararmeters to a web server.  The web server passes
these on to the CGI script typically in environment variable(s) for GET requests
and on STDIN for POST requests
<p>
Write a shell CGI script which (given no parameters) prints a form allowing 2 numbers to be entered.
The form should run the same CGI script, and the CGI script should
print the sum of the numbers and a form allowing two more numbers to be entered and the script to
be run again.
Here is an example implementation:

</p><p>
</p><hr/>
<div class="cgi_display">
<div class="cgi_display_title">
<a href="sum_two_numbers.sh.cgi" target="_blank">sum_two_numbers.sh.cgi</a>
</div>
<div class="cgi_output_panel">
<iframe class="cgi_output_display" onload="show_html_source(this)" src="sum_two_numbers.sh.cgi">
</iframe>
</div>
<div class="html_source_panel">
<div class="html_source_display">
</div>
</div>
</div>
<hr/>
<p>
</p><p></p>
</li></ol>
</div>
<!--
public_html_session_directory=/web/cs2041/17s2
base_directory=/web/cs2041/17s2
public_html_directory=/web/cs2041
scripts_directory=/web/cs2041/17s2/scripts
home_directory=/home/cs2041
bin_directory=/home/cs2041/bin
course_account=cs2041
course_code=COMP2041
course_number=2041
postgraduate_course_code=COMP9041
course_name=Software Construction
unsw_session=17s2
canonical_url=https://cgi.cse.unsw.edu.au/~cs2041/
github_repo_url=https://github.com/COMP2041UNSW/course_materials
course_forum_url=https://piazza.com/class/j5ji4vjjra62a3
lecture_recordings_url=https://moodle.telt.unsw.edu.au/course/view.php?id=27708
WORK=/web/cs2041/17s2/work
OUT=/web/cs2041/17s2/work/.out
MARKED=/web/cs2041/17s2/work/.out/.marked
SMSDB=/web/cs2041/17s2/work/17s2db.sms
tlb_directory=/web/cs2041/17s2/tlb
lecture_directory=/web/cs2041/17s2/lec
flask_cache_directory=/web/cs2041/17s2/flask_cache
testing_results_file=/web/cs2041/17s2/work/testing_results.json
enrollments_file=/web/cs2041/17s2/work/enrollments.json
unsw_ldap_password_file=/web/cs2041/.unsw_ldap_password
autotest_upload_url=https://cgi.cse.unsw.edu.au/~cs2041/cgi/autotest_upload.cgi
PATH=/web/cs2041/17s2/scripts:/home/cs2041/bin:/bin/:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/home/class/bin:/home/give/stable/bin.:/bin:/usr/bin:/usr/local/bin
directory_relative_pathname=tlb/10
url=https://cgi.cse.unsw.edu.au/~cs2041/flask.cgi/tut/10/questions
directory_url=https://cgi.cse.unsw.edu.au/~cs2041/tut/10/
url_root=https://cgi.cse.unsw.edu.au/~cs2041/
script_root=/~cs2041/flask.cgi
current_lecture_topic=exam
current_week=13
week=10
exercise_name=tut10
tut_or_lab_or_test=tut
questions_or_answers=questions
programs=&lt;programs&gt;

-->
</body>
</html>