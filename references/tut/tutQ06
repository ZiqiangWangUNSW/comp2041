<!DOCTYPE html>
<html lang="en">
<head>
<title>

COMP2041 Week 06 Tutorial Questions

</title>
<link href="/~cs2041/flask.cgi/static/bootstrap.min.css?121200" rel="stylesheet"/>
<link href="/~cs2041/flask.cgi/static/course.css?6554" rel="stylesheet"/>
<script src="/~cs2041/flask.cgi/static/jquery.min.js?95992" type="text/javascript"></script>
<script src="/~cs2041/flask.cgi/static/bootstrap.min.js?37045" type="text/javascript"></script>
<script src="/~cs2041/flask.cgi/static/course.js?1631" type="text/javascript"></script>
<link href="https://cgi.cse.unsw.edu.au/~cs2041/" rel="canonical"/>
</head>
<body>
<div class="container">
<div id="heading">
<a class="heading_link" href="http://www.cse.unsw.edu.au/~cs2041/17s2/" id="left_heading_link" target="_blank">COMP[29]041 17s2</a>
<span class="dropdown">
<button class="btn dropdown-toggle heading_button" data-toggle="dropdown" type="button">
        Week 06
        <span class="caret"></span>
</button>
<ul class="dropdown-menu">
<li><a href="https://cgi.cse.unsw.edu.au/~cs2041/tut/02/questions">Week 02</a></li>
<li><a href="https://cgi.cse.unsw.edu.au/~cs2041/tut/03/questions">Week 03</a></li>
<li><a href="https://cgi.cse.unsw.edu.au/~cs2041/tut/04/questions">Week 04</a></li>
<li><a href="https://cgi.cse.unsw.edu.au/~cs2041/tut/05/questions">Week 05</a></li>
<li><a href="https://cgi.cse.unsw.edu.au/~cs2041/tut/06/questions">Week 06</a></li>
<li><a href="https://cgi.cse.unsw.edu.au/~cs2041/tut/07/questions">Week 07</a></li>
<li><a href="https://cgi.cse.unsw.edu.au/~cs2041/tut/08/questions">Week 08</a></li>
<li><a href="https://cgi.cse.unsw.edu.au/~cs2041/tut/09/questions">Week 09</a></li>
<li><a href="https://cgi.cse.unsw.edu.au/~cs2041/tut/10/questions">Week 10</a></li>
<li><a href="https://cgi.cse.unsw.edu.au/~cs2041/tut/11/questions">Week 11</a></li>
<li><a href="https://cgi.cse.unsw.edu.au/~cs2041/tut/12/questions">Week 12</a></li>
<li><a href="https://cgi.cse.unsw.edu.au/~cs2041/tut/13/questions">Week 13</a></li>
</ul>
</span>
<span class="dropdown">
<button class="btn dropdown-toggle heading_button" data-toggle="dropdown" type="button">
        Tutorial
        <span class="caret"></span>
</button>
<ul class="dropdown-menu">
<li><a href="https://cgi.cse.unsw.edu.au/~cs2041/tut/06/questions">Tutorial
                
            </a></li>
<li><a href="https://cgi.cse.unsw.edu.au/~cs2041/lab/06/questions">Laboratory
                
            </a></li>
<li><a href="https://cgi.cse.unsw.edu.au/~cs2041/test/06/questions">Weekly Test
                
            </a></li>
</ul>
</span>
<span class="dropdown">
<button class="btn dropdown-toggle heading_button" data-toggle="dropdown" type="button">
        Questions
        <span class="caret"></span>
</button>
<ul class="dropdown-menu">
<li><a href="https://cgi.cse.unsw.edu.au/~cs2041/tut/06/questions">Questions
            
            </a></li>
<li><a href="https://cgi.cse.unsw.edu.au/~cs2041/tut/06/answers">Sample Answers
            
            </a></li>
</ul>
</span>
<a class="heading_link" href="http://www.cse.unsw.edu.au/~cs2041/17s2/" id="right_heading_link" target="_blank">Software Construction</a>
</div>
</div>
<div class="tutlab tut">
<ol>
<ol>
<li>

Write a Perl program <code>./merge_whales.pl</code> which reads a list of whales observations
from its standard input and prints them to its standard output, merging adjacent counts
of the same species. For example, given this input:
<pre class="command_line">
3 beluga
10 humpback
15 humpback
2 sperm whale
3 humpback
5 humpback
8 humpback
1 beluga
3 beluga
</pre>

Your program should produce this output:

<pre class="command_line">
3 beluga
25 humpback
2 sperm whale
16 humpback
4 beluga
</pre>
<p></p>
</li><li>

Write a Perl program, <code>phone_numbers.pl</code> which given the URL of a web
page fetches it by running <i>wget</i> and prints any strings that might be
phone numbers in the web page.
<p>
Assume the digits of phone numbers may be separated  by zero or more spaces or hyphens('-')
and can contain between 8 and 15 digits inclusive.
</p><p>
You should print the phone numbers one per line with spaces &amp; hyphens removed.
</p><p>
For example
</p><pre class="command_line">
<kbd class="shell">./phone_numbers.pl http://www.unsw.edu.au</kbd>
20151028
11187777
841430912571345
413200225
61293851000
57195873179
</pre>
<p></p>
</li><li>

What does each of the following Perl code fragments print
(no, don't just clip the lines and pass them to Perl,
think about what they're doing):

<ol type="a">
<li>
<pre class="program">
$x = 'x';
for ($i = 1; $i &lt;= 3; $i++) {
    $x = "($x)";
}
print "$x\n";
</pre>
<p></p>
</li><li>
<pre class="program">
@hi = split //,"hello";
for ($i = 0; $i &lt; 4; $i++) {
    print $hi[$i];
}
print "\n";
</pre>
<p></p>
</li><li>
<pre class="program">
@vec = (10 .. 20);
print "@vec[1..3]\n";
</pre>
<p></p>
</li><li>
<pre class="program">
foreach $n (1..10) {
    last if ($n &gt; 5);
    print "$n ";
    next if ($n % 2 == 0);
    print "$n ";
}
print "\n";
</pre>
<p></p>
</li></ol>
<h3>Revision questions</h3>

The remaining tutorial questions are primarily intended for revision - either this week
or later in session.
<p>
Your tutor may still choose to cover some of the questions time permitting.
</p><p>
</p></li><li>

Write a Perl program <code>source_count.pl</code> which prints the number of line of C source code
in the current directory.  In other words, this Perl program should
behave similarly to <code>wc -l *.[ch]</code>.  (Note: you are not
allowed to use <code>wc</code> or other Unix programs from within the
Perl script). For example:
<p>
</p><pre class="command_line">
<kbd class="shell">./source_count.pl</kbd>
    383 cyclorana.c
    280 cyclorana.h
     15 enum.c
    194 frequency.c
    624 model.c
    293 parse.c
    115 random.c
     51 smooth.c
    132 util.c
     16 util.h
    410 waveform.c
   2513 total
</pre>
<p></p>
</li><li>

Write a Perl program, <code>cut.pl</code> which takes three arguments, <i>n</i>, <i>m</i> and a file name.
It should print characters <i>n</i>-<i>m</i> of each line of the file.
For example:

<pre class="command_line">
<kbd class="shell">./cut.pl 1 8 file</kbd>
</pre>

should print the 8 characters of every line in <code>file</code>.
<p>
Implement a version of the program which invokes <code>/usr/bin/cut</code>
and a version which performs the operations directly in Perl.

</p><p></p>
</li><li>

Implement a Perl script to solve the marks-to-grades problem that
was solved as a shell script in a previous tutorial.
Reminder: the script reads a sequence
of (studentID,mark) pairs from its standard input and writes
(studentID,grade) pairs to its standard output.
The input pairs are written on a single line, separated by spaces,
and the output should use a similar format.
The script should also check whether the second value on each line
looks like a valid grade, and output an appropriate message if it
doesn't.
The script can ignore any extra data occuring after the mark on each line.
<p>
Consider the following input and corresponding output to the
program:


</p><table cellpadding="10">
<tr> <th>Input </th><th>Output
</th></tr><tr>
<td>
<pre class="command_line">
2212345 65
2198765 74
2199999 48
2234567 50 ok
2265432 99
2121212 hello
2222111 120
2524232 -1
</pre>
</td><td>
<pre class="command_line">
2212345 CR
2198765 CR
2199999 FL
2234567 PS
2265432 HD
2121212 ?? (hello)
2222111 ?? (120)
2524232 ?? (-1)
</pre>
</td></tr></table>
<p></p>
</li><li>

Write a program <code>addressbook.pl</code> that reads two files <code>people.txt</code> and <code>phones.txt</code> containing data in CSV
(comma-separated values) format and uses this data to print
an address book in the format below:


    
        
    






<pre class="command_line" style="max-height: 32em;overflow:  auto;">
<kbd class="shell">cat people.txt</kbd>
andrew,Andrew Taylor,42 Railway St,Petersham
arun,Arun Sharma,94 Leafy Close,Brisbane
gernot,Gernot Heiser,64 Trendy Tce,Newtown
jas,John Shepherd,16/256 Busy Rd,Alexandria
<kbd class="shell">cat phones.txt</kbd>
jas,home,9665 6432
arun,work,9385 5518
jas,work,9385 6494
arun,home,(07) 9314 6543
andrew,work,9385 4321
arun,mobile,0803 123 432
<kbd class="shell">./addressbook.pl</kbd>
Andrew Taylor
42 Railway St, Petersham
Phones: 9385 4321 (work)

Arun Sharma
94 Leafy Close, Brisbane
Phones: 0803 123 432 (mobile), (07) 9314 6543 (home), 9385 5518 (work)

Gernot Heiser
64 Trendy Tce, Newtown
Phones: ?

John Shepherd
16/256 Busy Rd, Alexandria
Phones: 9665 6432 (home), 9385 6494 (work)

</pre>
<p>
Assume that there are only three types of phone (mobile, home and work)
and we always display them in that order.
</p>
<p>
<i>Hint:</i> because the phone types are fixed, login name and phone type
together can be the key used to look up a number.
In this situation some suitable separator is used to create
a composite, unambiguous key for the hash.

</p><p></p>
</li></ol>
</ol>
</div>
<!--
public_html_session_directory=/web/cs2041/17s2
base_directory=/web/cs2041/17s2
public_html_directory=/web/cs2041
scripts_directory=/web/cs2041/17s2/scripts
home_directory=/home/cs2041
bin_directory=/home/cs2041/bin
course_account=cs2041
course_code=COMP2041
course_number=2041
postgraduate_course_code=COMP9041
course_name=Software Construction
unsw_session=17s2
canonical_url=https://cgi.cse.unsw.edu.au/~cs2041/
github_repo_url=https://github.com/COMP2041UNSW/course_materials
course_forum_url=https://piazza.com/class/j5ji4vjjra62a3
lecture_recordings_url=https://moodle.telt.unsw.edu.au/course/view.php?id=27708
WORK=/web/cs2041/17s2/work
OUT=/web/cs2041/17s2/work/.out
MARKED=/web/cs2041/17s2/work/.out/.marked
SMSDB=/web/cs2041/17s2/work/17s2db.sms
tlb_directory=/web/cs2041/17s2/tlb
lecture_directory=/web/cs2041/17s2/lec
flask_cache_directory=/web/cs2041/17s2/flask_cache
testing_results_file=/web/cs2041/17s2/work/testing_results.json
enrollments_file=/web/cs2041/17s2/work/enrollments.json
unsw_ldap_password_file=/web/cs2041/.unsw_ldap_password
autotest_upload_url=https://cgi.cse.unsw.edu.au/~cs2041/cgi/autotest_upload.cgi
PATH=/web/cs2041/17s2/scripts:/home/cs2041/bin:/bin/:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/home/class/bin:/home/give/stable/bin.:/bin:/usr/bin:/usr/local/bin
directory_relative_pathname=tlb/06
url=https://cgi.cse.unsw.edu.au/~cs2041/flask.cgi/tut/06/questions
directory_url=https://cgi.cse.unsw.edu.au/~cs2041/tut/06/
url_root=https://cgi.cse.unsw.edu.au/~cs2041/
script_root=/~cs2041/flask.cgi
current_lecture_topic=exam
current_week=13
week=06
exercise_name=tut06
tut_or_lab_or_test=tut
questions_or_answers=questions
programs=&lt;programs&gt;

-->
</body>
</html>